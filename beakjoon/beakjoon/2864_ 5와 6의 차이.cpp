#include <iostream>
#include <vector>

using namespace std;

// 브론즈 2

int main()
{
	int A, B, max = 0, min = 0, t = 1;  // A와 B는 입력값, max는 5를 전부 6으로 바꾼 경우의 합, min은 6을 전부 5로 바꾼 경우의 합, t는 벡터 값으로 옮겨진 수들의 자릿 수를
										// 맞추기 위한 변수
	vector<int> a;
	vector<int> b;
	cin >> A >> B;						// 정수를 입력받음

	while (A > 10)						// 각 자릿 수가 무슨 수 인지 알기 위한 반복문
	{
		a.push_back(A % 10);			// 나머지 값을 벡터에 넣어 줌
		A /= 10;						// 다음 자릿 수의 수가 무엇인지 알기 위해 나누기 10을 계속 해줌
	}
	a.push_back(A);						// 나왔을 때 한자리 수로 나오는데 그것이 제일 큰 자릿 수의 수 이기 때문에 그냥 벡터에 넣어줌

	while (B > 10)						// 위와 동일
	{
		b.push_back(B % 10);
		B /= 10;
	}
	b.push_back(B);

	t = 1;								// 자릿 수를 맞추기 위해 1로 초기화
	for (int i = 0; i < a.size(); i++)	// 벡터의 크기 만큼 반복
	{
		if (a[i] == 5)					// 만약 5인게 있다면 6으로 바꿔줌 (제일 큰 합을 구하기 위해)
		{
			a[i] = 6;
		}
		max += a[i] * t;				// max에 더해줌 t를 곱하는 이유는 다 1의 자리지만 원래는 10, 100, 1000, 10000... 의 자리 수 였기 때문이다.
		t *= 10;						// 벡터안의 수를 10, 100, 1000, 10000... 의 자리 수였던 대로 만들어 주기 위해 t에 10을 곱해줌
	}
	t = 1;								// 다시 해야하기 때문에 1로 초기화
	for (int i = 0; i < b.size(); i++)	// 위와 동일
	{
		if (b[i] == 5)
		{
			b[i] = 6;
		}
		max += b[i] * t;
		t *= 10;
	}

	t = 1;								// 위와 동일
	for (int i = 0; i < a.size(); i++)
	{
		if (a[i] == 6)					// 여기만 다른데, 여긴 벡터안에 6인 수를 5로 바꿔줌 (제일 작은 합을 구하기 위해)
		{
			a[i] = 5;
		}
		min += a[i] * t;
		t *= 10;
	}
	t = 1;
	for (int i = 0; i < b.size(); i++)	// 위와 동일 여기도 제일 작은 합을 구하기 위한 반복문
	{
		if (b[i] == 6)
		{
			b[i] = 5;
		}
		min += b[i] * t;
		t *= 10;
	}

	cout << min << " " << max;			// 제일 작은 합과 제일 큰 합을 순서로 출력
}