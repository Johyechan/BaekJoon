#include <iostream>
#include <vector>

using namespace std;

// 브론즈 3

int main()
{
	int N, answer = 0;						// N은 대여소의 개수, answer는 자전거를 최소 몇 번 옮겨야 하는지 저장하는 변수
	vector<int> a;							// 대여소 마다 몇 개의 자전거가 있었는지 알기 위한 벡터
	vector<int> b;							// 대여소 마다 몇 개의 자전거가 있는지 알기 위한 벡터
	cin >> N;								// 대여소의 개수를 받음

	for (int i = 0; i < N * 2; i++)			// 대여소의 2배 만큼 반복문을 돌림 왜냐하면 원래 기존의 대여소 마다의 자전거 개수와 
	{										// 현재 대여소 마다의 자전거 개수를 알기 위해서
		int n;
		cin >> n;							// 자전거 개수를 받음 
		if (i < N)							// 기존 대여소의 자전거 개수
		{
			a.push_back(n);
		}
		else								// 현재 대여소의 자전거 개수
			b.push_back(n);
	}

	for (int j = 0; j < a.size(); j++)		// 대여소 만큼 반복문을 돌림
	{
		if (a[j] > b[j])					// 기존 대여소의 자전거 갯수가 현재 대여소의 자전거 개수 보다 큰 곳을 찾음
		{	
			answer +=  a[j] - b[j];			// 그리고 최소로 옮길 수 있는 수에 기존 대여소와 현재 대여소의 자전거 개수의 차 만큼 더함
		}									// 왜냐하면 결국 현재 대여소는 기존의 대여소에 맞춰야 하기 때문에 기존 대여소 보다 적은 곳에 기존 대여소 보다 
	}										// 많은 곳에서 적은 만큼 옮겨야 하기 때문이다.

	cout << answer;							// 최소로 옮길 수 있는 횟수를 출력
}